<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource GLOBAL_RADIO_BACKGROUND}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource GLOBAL_RADIO_BORDER_COLOR}"/>
        <Setter Property="Foreground" Value="{DynamicResource GLOBAL_RADIO_FOREGROUND}"/>

        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                BorderThickness="{TemplateBinding BorderThickness}"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid" Margin="2">
                                <!--<Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="{TemplateBinding Height}" MinHeight="{TemplateBinding Height}" Opacity="0"/>-->
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource GLOBAL_RADIO_OVER_BACKGROUND}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource GLOBAL_RADIO_OVER_BORDER_COLOR}"/>
                            <Setter Property="Foreground"  Value="{DynamicResource GLOBAL_RADIO_OVER_FOREGROUND}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource GLOBAL_RADIO_DISABLE_BACKGROUND}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource GLOBAL_RADIO_DISABLE_BACKGROUND}"/>
                            <Setter Property="Foreground"  Value="{DynamicResource GLOBAL_RADIO_DISABLE_FOREGROUND}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource GLOBAL_RADIO_PRESSED_BACKGROUND}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource GLOBAL_RADIO_PRESSED_BORDER_COLOR}"/>
                            <Setter Property="Foreground"  Value="{DynamicResource GLOBAL_RADIO_PRESSED_FOREGROUND}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource GLOBAL_RADIO_CHECKED_BACKGROUND}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource GLOBAL_RADIO_CHECKED_BORDER_COLOR}"/>
                            <Setter Property="Foreground"  Value="{DynamicResource GLOBAL_RADIO_CHECKED_FOREGROUND}"/>


                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>