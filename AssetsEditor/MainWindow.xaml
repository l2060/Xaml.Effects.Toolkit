<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Assets.Editor" 
        xmlns:xkit="http://schemas.l2030.com/xkit" 
        xmlns:models="clr-namespace:Assets.Editor.Models"
            xmlns:controls="clr-namespace:Assets.Editor.Controls"
        xmlns:convert="clr-namespace:Assets.Editor.Converter"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mscorlib="clr-namespace:System;assembly=mscorlib"
        xmlns:common="clr-namespace:Resource.Package.Assets.Common;assembly=Resource.Package.Assets"
        x:Class="Assets.Editor.MainWindow"
        Title="{Binding Title}"
        Width="1024"
        Height="768"
        Background="{DynamicResource GLOBAL_BACKGROUND_COLOR}"
        Icon="/Assets.Editor;component/Assets/Icon.png"
        Style="{DynamicResource xKit-WindowChrome VisualStudio}"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        mc:Ignorable="d" Loaded="Window_Loaded"
    >
    <Window.Resources>
        <ObjectDataProvider x:Key="RenderTypes" MethodName="GetValues" ObjectType="{x:Type mscorlib:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="common:RenderTypes"></x:Type>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="ViewGrids" MethodName="GetValues" ObjectType="{x:Type mscorlib:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:ViewGrids"></x:Type>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>



    </Window.Resources>

    <xkit:WindowTheme.Theme>
        <xkit:WindowTheme
            BorderBrush="{DynamicResource WINDOW_BORDER_COLOR}"
            ExitCommand="{Binding ExitCommand}"
            MaxButton="Visible"
            MinButton="Visible">
            <xkit:WindowTheme.Menu>
                <Menu
                    Height="20"
                    Margin="0,4,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Background="Transparent">
                    <MenuItem
                        Height="20"
                        Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                        Header="文件(F)"
                        Style="{DynamicResource WindowMenuStyle}">
                        <MenuItem
                            Height="20"
                            Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                            Header="新建资源包(N)">
                        </MenuItem>
                        <MenuItem
                            Height="20"
                            Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                            Header="打开资源包(O)">
                        </MenuItem>
                        <MenuItem
                            Height="20"
                            Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                            Header="保存(S)" />

                        <MenuItem
                            Height="20"
                            Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                            Header="关闭(C)"/>
                        <MenuItem
                            Height="20"
                            Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                            Header="退出(E)" />

                    </MenuItem>
                    <MenuItem
                        Height="20"
                        Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                        Header="编辑(E)"
                        Style="{DynamicResource WindowMenuStyle}">
                        <MenuItem
                        Height="20"
                        Command="{Binding ImportImageCommand}"
                        Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                        Header="导入追加(N)">
                        </MenuItem>
                        <MenuItem
                        Height="20"
                        Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                            Command="{Binding ExportImageCommand}"
                        Header="导出选中项(O)">
                        </MenuItem>
                        <MenuItem
                        Height="20"
                        Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                        Header="跳转到..(C)"/>
                    </MenuItem>

                    <MenuItem
                        Height="20"
                        Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                        Header="工具(T)"
                        Style="{DynamicResource WindowMenuStyle}" >

                        <MenuItem
                        Height="20"
                        Command="{Binding Bmp2PngCommand}"
                        Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                        Header="Bmp转Png工具">
                        </MenuItem>


                        <MenuItem
                        Height="20"
                        Command="{Binding PngFormatCommand}"
                        Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                        Header="Png标准化工具">
                        </MenuItem>
                        
                        <MenuItem
                        Height="20"
                        Command="{Binding MaskToolCommand}"
                        Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                        Header="遮罩层格式化工具">
                        </MenuItem>

                        

                    </MenuItem>

                    <MenuItem
                        Height="20"
                        Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                        Header="帮助(H)"
                        Style="{DynamicResource WindowMenuStyle}" >
                        <MenuItem
                        Height="20" IsChecked="{Binding IsRegFileType,Mode=TwoWay}" Command="{Binding RegFileTypeCommand}"
                        Foreground="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                        Header="关联文件"/>


                    </MenuItem>
                </Menu>
            </xkit:WindowTheme.Menu>
            <xkit:WindowTheme.AttachedButtons>
                <WrapPanel>
                    <Button
                        Width="48"
                        Height="32"
                        Content="&#xe91d;"  
                        FontSize="18" 
                        FontFamily="{DynamicResource GraceFont}"
                        Command="{Binding ThemesCommand}"
                        ToolTip="更换主题" />
                </WrapPanel>
            </xkit:WindowTheme.AttachedButtons>
            <xkit:WindowTheme.Services>
                <xkit:FixFullScreenService />
                <xkit:WindowResizeService ResizeThickness="4" MinWidth="600" MinHeight="300" />
            </xkit:WindowTheme.Services>
        </xkit:WindowTheme>
    </xkit:WindowTheme.Theme>

    <Grid Margin="0,0,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="26"/>
        </Grid.RowDefinitions>

        <WrapPanel  Grid.Column="0" Background="{DynamicResource GLOBAL_TOOLBAR_BACKGROUND}">
            <Button Content="&#xe836;" FontSize="18"  
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Command="{Binding NewPackageCommand}"
                                ToolTip="新建资源包"
                    FontFamily="{DynamicResource GraceFont}" HorizontalAlignment="Left" Width="32" Height="30"  />

            <Button Content="&#xe709;" FontSize="18"  
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Command="{Binding OpenPackageCommand}"
                                ToolTip="打开资源包"
                    FontFamily="{DynamicResource GraceFont}" HorizontalAlignment="Left" Width="32" Height="30" />


            <Separator Height="20">
                <Separator.LayoutTransform>
                    <RotateTransform Angle="90" />
                </Separator.LayoutTransform>
            </Separator>

            <Button Content="&#xe66f;" FontSize="16"  
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Command="{Binding CleanImageCommand}"
                    ToolTip="清除选中图片"
                    FontFamily="{DynamicResource GraceFont}" HorizontalAlignment="Left" Width="32" Height="30" />

            <Button Content="&#xe850;" FontSize="16"  
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Command="{Binding ImportImageCommand}"
                    ToolTip="导入资源"
                    FontFamily="{DynamicResource GraceFont}" HorizontalAlignment="Left" Width="32" Height="30" />



            <Button Content="&#xe675;" FontSize="16"  
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Command="{Binding ExportImageCommand}"
                    ToolTip="导出资源"
                    FontFamily="{DynamicResource GraceFont}" HorizontalAlignment="Left" Width="32" Height="30" />


            <Separator Height="20">
                <Separator.LayoutTransform>
                    <RotateTransform Angle="90" />
                </Separator.LayoutTransform>
            </Separator>


            <Button Content="&#xe6de;" FontSize="16"  
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Command="{Binding ExpandCommand}"
                    ToolTip="扩容资源包"
                    FontFamily="{DynamicResource GraceFont}" HorizontalAlignment="Left" Width="32" Height="30" />

            <Button Content="&#xe66d;" FontSize="16"  
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Command="{Binding RecycleCommand}"
                    ToolTip="回收扩容"
                    FontFamily="{DynamicResource GraceFont}" HorizontalAlignment="Left" Width="32" Height="30" />



            <Separator Height="20">
                <Separator.LayoutTransform>
                    <RotateTransform Angle="90" />
                </Separator.LayoutTransform>
            </Separator>


            <Button Content="&#xe62f;" FontSize="16"  
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Command="{Binding ChangePasswordCommand}"
                    ToolTip="修改资源包密码"
                    FontFamily="{DynamicResource GraceFont}" HorizontalAlignment="Left" Width="32" Height="30" />
            <Button Content="&#xe656;" FontSize="16"  
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Command="{Binding ClosePackageCommand}"
                    ToolTip="关闭当前打开的资源包"
                    FontFamily="{DynamicResource GraceFont}" HorizontalAlignment="Left" Width="32" Height="30" />

            <Separator Height="20">
                <Separator.LayoutTransform>
                    <RotateTransform Angle="90" />
                </Separator.LayoutTransform>
            </Separator>




            <Label VerticalContentAlignment="Center">列表显示：</Label>
            <ComboBox  SelectedItem="{Binding ListGrid}" ItemsSource="{Binding Source={StaticResource ViewGrids}}"
                     VerticalContentAlignment="Center" Height="24" Width="150" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={xkit:EnumDescriptionConverter}}"    >
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <xkit:EventBehavior Command="{Binding ListGridChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>-->
            </ComboBox>


            <Label VerticalContentAlignment="Center">渲染模式：</Label>
            <ComboBox Height="24" Width="100" 
                          SelectedItem="{Binding DrawingMode, Mode=TwoWay}"
                          ItemsSource="{Binding Source={StaticResource DrawingModes}}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={xkit:EnumDescriptionConverter}}"    >

                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>

            </ComboBox>



        </WrapPanel>



        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="170*"/>
                <RowDefinition Height="100*" MinHeight="205"/>
            </Grid.RowDefinitions>

            <Grid >
                <xkit:ZoomScrollViewer x:Name="zoom" HorizontalScrollBarVisibility="Auto"  ZoomValue="{Binding ZoomValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <xkit:ZoomScrollViewer.Background>
                        <ImageBrush ImageSource="/Assets/Images/background.png"/>
                    </xkit:ZoomScrollViewer.Background>
                    <controls:ImageCanvas  Background="#01FFFFFF"  Focusable="True"
                                      OffsetX="{Binding Selected.OffsetX, Mode=TwoWay}"  OffsetY="{Binding Selected.OffsetY, Mode=TwoWay}">
                        <controls:ImageCanvas.Source>
                            <MultiBinding Converter="{convert:BitmapSourceConverter}">
                                <Binding Path="SelectedImage.Source"/>
                                <Binding Path="DrawingMode"/>
                            </MultiBinding>
                        </controls:ImageCanvas.Source>
                    </controls:ImageCanvas>


                </xkit:ZoomScrollViewer>

                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,15,0" Orientation="Horizontal">

                    <Label  Padding="5,0" >零点线</Label>

                    <Label  Padding="5,0" Foreground="Yellow" >人物线</Label>
                    <Label  Padding="5,0,0,0" Foreground="#FFFF0101" >缩放:x</Label>
                    <Label  Padding="0" Foreground="#FFFF0101" Content="{Binding ElementName=zoom,Path=ZoomValue}"></Label>
                </StackPanel>


            </Grid>

            <GridSplitter Height="5" Grid.Row="1"  VerticalAlignment="Top"  ResizeDirection="Rows" HorizontalAlignment="Stretch" Background="{DynamicResource GLOBAL_LISTBOX_BORDER_BACKGROUND}" />

            <Grid Grid.Row="1"  Margin="0,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="160"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.Resources>
                        <DataTemplate x:Key="ItemTemplate">
                            <Grid >
                                <Image Stretch="Fill" AllowDrop="True" Source="{Binding Source}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Drop">
                                            <xkit:EventBehavior Handler ="{Binding Path=DataContext.ImageDropEventCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="DragEnter">
                                            <xkit:EventBehavior Handler="{Binding Path=DataContext.ImageDragEnterEventCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </Image>


                                <Label HorizontalAlignment="Stretch" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                       VerticalAlignment="Bottom" Content="{Binding Index}" Background="#64020202" ></Label>



                            </Grid>
                        </DataTemplate>
                    </Grid.Resources>
                    <Border BorderBrush="{DynamicResource GLOBAL_LISTBOX_BORDER_BACKGROUND}" BorderThickness="1">
                    </Border>
                    <ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled"  ScrollViewer.VerticalScrollBarVisibility="Disabled" Name ="MovieListView" BorderThickness="0"
                              ItemTemplate="{StaticResource ItemTemplate}" 
                              SelectionMode="Single"
                              ItemsSource="{Binding GridImages}" Margin="1,1,16,1">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseWheel">
                                <xkit:EventBehavior Command="{Binding PreviewMouseWheelCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="SelectionChanged">
                                <xkit:EventBehavior Command="{Binding SelectionChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="{Binding GridColumns}" Rows="{Binding GridRows}" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>


                    <ScrollBar HorizontalAlignment="Right" Maximum="{Binding TotalPage}" Value="{Binding CurrentPage,Mode=TwoWay}"  Minimum="0"  Width="17" Margin="0,1,1,1">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseWheel">
                                <xkit:EventBehavior Command="{Binding PreviewMouseWheelCommand}" />
                            </i:EventTrigger>

                            <i:EventTrigger EventName="ValueChanged">
                                <xkit:EventBehavior Command="{Binding PageChangedCommand}" />
                            </i:EventTrigger>



                        </i:Interaction.Triggers>
                    </ScrollBar>


                </Grid>

                <Grid Grid.Column="1" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border BorderThickness="1" Grid.ColumnSpan="2" Margin="-1,0,1,0" >

                    </Border>
                    <Label  Content="图片格式：" Margin="0,12,0,0" HorizontalContentAlignment="Right" VerticalAlignment="Top"/>
                    <TextBox Text="{Binding Selected.ImageType}" IsReadOnly="True" IsEnabled="False"   VerticalContentAlignment="Center"    VerticalAlignment="Top" Margin="0,13,5,0" Grid.Column="1" Height="24"/>

                    <Label  Content="X轴偏移：" VerticalAlignment="Top"  HorizontalContentAlignment="Right" Margin="0,121,0,0"/>
                    <xkit:NumbericTextBox  Margin="0,122,5,0" Text="0" MaxLines="1" MaxValue="100000000" MinValue="-100000000" Precision="0" Value="{Binding Selected.OffsetX ,Mode=TwoWay}"   
                          VerticalContentAlignment="Center"                 VerticalAlignment="Top" Grid.Column="1" Height="24">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <xkit:EventBehavior Command="{Binding OffsetChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </xkit:NumbericTextBox>
                    <Label  Content="Y轴偏移：" VerticalAlignment="Top" Margin="0,159,0,0" HorizontalContentAlignment="Right" />
                    <xkit:NumbericTextBox  Margin="0,160,5,0" Text="0"  MaxLines="1" MaxValue="100000000" MinValue="-100000000" Precision="0"  Value="{Binding Selected.OffsetY ,Mode=TwoWay}"  
                                        VerticalContentAlignment="Center"        VerticalAlignment="Top" Grid.Column="1" Height="24">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <xkit:EventBehavior Command="{Binding OffsetChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </xkit:NumbericTextBox>


                    <ComboBox  VerticalAlignment="Top" Height="24"  
                                 VerticalContentAlignment="Center"   SelectedItem="{Binding Selected.RenderType, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource RenderTypes}}" Grid.Column="1" Margin="0,85,5,0">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={xkit:EnumDescriptionConverter}}"    >
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <xkit:EventBehavior Command="{Binding RenderTypeChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                    </ComboBox>
                    <Label  Content="渲染方式：" VerticalAlignment="Top" HorizontalContentAlignment="Right" Margin="0,84,0,0" />
                    <Label  Content="文件大小：" VerticalAlignment="Top" Margin="0,47,0,0" HorizontalContentAlignment="Right" />
                    <TextBox  Margin="0,48,5,0" IsReadOnly="True" IsEnabled="False" Text="{Binding Selected.FileSize, Converter={xkit:FileSizeConverter}}"  
                        VerticalContentAlignment="Center"     VerticalAlignment="Top" Grid.Column="1" Height="24">
                    </TextBox>

                    <Button Content="应用" HorizontalAlignment="Center" Margin="0,201,0,0" VerticalAlignment="Top" Width="66" Height="24" 
                            Background="{DynamicResource GLOBAL_PRIMARY_COLOR}" Command="{Binding OffsetCommitCommand}" Grid.Column="1" />

                    <Button Content="批量应用" HorizontalAlignment="Left" Margin="9,201,0,0" VerticalAlignment="Top" Width="66" Height="24" 
                            Background="{DynamicResource GLOBAL_PRIMARY_COLOR}" Command="{Binding BatchOffsetCommitCommand}" Grid.ColumnSpan="2" />
                </Grid>

            </Grid>


        </Grid>


        <StatusBar
        
            Grid.Row="2"
            Background="{DynamicResource GLOBAL_STATUSBAR_BACKGROUND}"
            BorderBrush="{DynamicResource GLOBAL_STATUSBAR_BORDERROUND}"
            Height="26" VerticalAlignment="Bottom">

            <StatusBarItem Width="124" Padding="0">
                <Label
                    Padding="10,0,10,0"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    xkit:RollingLabel.RollDuration="00:00:05"
                    Content="https://github.com/vblegend"
                    Style="{DynamicResource xKit-Label Rolling}" Width="118" />
            </StatusBarItem>
            <StatusBarItem Padding="0">
            </StatusBarItem>
            <StatusBarItem Padding="0">
            </StatusBarItem>


            <StatusBarItem Width="24" HorizontalAlignment="Right">
                <Path
                    Data="M16,8 L17,8 M12,12 L13,12  M8,16 L9,16 M16,12 L17,12 M12,16 L13,16 M16,16 L17,16"
                    Stroke="{DynamicResource GLOBAL_FOREGROUND_COLOR}"
                    StrokeThickness="1" />
            </StatusBarItem>
        </StatusBar>









    </Grid>
</Window>
